{"version":3,"sources":["components/Usuarios.js","routers/AppRouter.js","index.js"],"names":["url","Usuarios","state","data","form","id","name","username","address","street","suite","city","zipcode","peticionesGet","axios","get","then","response","setState","catch","error","console","log","message","peticionesPost","a","post","modalInsertar","peticionesPut","put","peticionesDelete","delete","modalEliminar","handleChange","e","persist","target","value","seleccionarHeroe","heroe","tipoModal","superhero","publisher","alter_ego","first_appearance","image","this","className","map","users","email","onClick","icon","faEdit","Modal","isOpen","ModalHeader","style","display","float","ModalBody","htmlFor","type","readOnly","onChange","handleFileChange","handlePictureClick","onBlur","ModalFooter","Component","AppRouter","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19104053.chunk.js","sourcesContent":["import axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\nimport { Component } from 'react';\n\nconst url = \"https://jsonplaceholder.typicode.com/users\";\n\n\nclass Usuarios extends Component {\n\n    state = {\n        data: [],\n        form: {\n            id: '',\n            name: '',\n            username: '',\n            address: {\n                street:'',\n                suite:'',\n                city:'',\n                zipcode:''\n\n            }\n        }\n        \n    }\n\n    componentDidMount() {\n        this.peticionesGet();\n    }\n\n    //Peticiones\n    peticionesGet = () => {\n        axios.get(url).then(response => {\n            this.setState({ data: response.data })\n        }).catch(error => {\n            console.log(error.message);\n        })\n    }\n\n    peticionesPost = async () => {\n        delete this.state.form.id;\n         await axios.post(url, this.state.form)\n         .then(response => { // luego de que inserte\n             this.modalInsertar(); //cerramos el modal\n             this.peticionesGet(); // llamamos a la peticiÃ³n get para que refresque y actualice la info\n         }).catch(error => {\n            console.log(error.message);\n        })\n    }\n\n    peticionesPut = () => {\n        axios.put(url+this.state.form.id, this.state.form).then(response=>{\n            this.modalInsertar(); //cierre el modal\n            this.peticionesGet(); // refresque\n        }).catch(error => {\n            console.log(error.message);\n        })\n    }\n\n    peticionesDelete=()=>{\n        axios.delete(url+this.state.form.id)\n        .then(response =>{\n            this.setState({modalEliminar:false});\n            this.peticionesGet();\n        }).catch(error => {\n            console.log(error.message);\n        })\n    }\n\n    modalInsertar = () => {\n        this.setState({modalInsertar: !this.state.modalInsertar})\n    }\n\n\n          \n  handleChange = async (e) => {\n     e.persist();\n    await this.setState({\n        form:{\n            ...this.state.form, // heredamos todos los atributos\n            [e.target.name]: e.target.value //tal cual el nombre como se guardÃ³ en el estado, se debe llamar\n\n            //el input\n        }\n    })\n    //mostremos por consola lo que va capturando\n    console.log(this.state.form);\n  }\n    \n  //seleccionar heroe\n  seleccionarHeroe=(heroe)=>{\n      this.setState({\n          tipoModal: 'actualizar',\n          form: {\n              id: heroe.id,\n              name: heroe.name,\n              superhero: heroe.superhero,\n              publisher: heroe.publisher,\n              alter_ego: heroe.alter_ego,\n              first_appearance: heroe.first_appearance,\n              image: heroe.image,\n          }\n      })\n  }\n    \n    render() {\n        const {form} = this.state;\n        return (\n            <div className=\"container\">\n\n                <br /> <br />\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>id</th>\n                            <th>name</th>\n                            <th>username</th>\n                            <th>email</th>\n                            <th>street</th>\n                            <th>suite</th>\n                            <th>city</th>\n                            <th>zipcode</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            this.state.data.map(users => {\n                                return (\n                                    <tr>\n                                         <td>{users.id}</td>\n                                         <td>{users.name}</td>\n                                         <td>{users.username}</td>\n                                         <td>{users.email}</td>\n                                         <td>{users.address.street}</td>\n                                         <td>{users.address.suite}</td>\n                                         <td>{users.address.city}</td>\n                                         <td>{users.address.zipcode}</td>\n                                         <button className=\"btn btn-primary\"\n                                         onClick={() => {this.seleccionarHeroe(users);this.modalInsertar()}}><FontAwesomeIcon icon={faEdit}/></button>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n\n                <Modal isOpen={this.state.modalInsertar}>\n                    <h1>Modal Insertar</h1>\n                    <ModalHeader style={{display: 'block'}}>\n                        <span style={{float: 'right'}}>x</span>\n                    </ModalHeader>\n                    <ModalBody>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"id\">id</label>\n                            <input className=\"form-control\" type=\"text\" name=\"id\" id=\"id\" readOnly onChange={this.handleChange} value={form?form.id: ''}/>\n                            <br/>\n                            <label htmlFor=\"name\">name</label>\n                            <input className=\"form-control\" type=\"text\" name=\"name\" id=\"name\" onChange={this.handleChange} value={form?form.name:''}/>\n                            <br/>\n                            <label htmlFor=\"superhero\">superhero</label>\n                            <input className=\"form-control\" type=\"text\" name=\"username\" id=\"username\" onChange={this.handleChange} value={form?form.username:''}/>\n                            <br/>\n                            <label htmlFor=\"publisher\">publisher</label>\n                            <input className=\"form-control\" type=\"text\" name=\"street\" id=\"street\" onChange={this.handleChange} value={form?form.address.street:''}/>\n                            <br/>\n                            <label htmlFor=\"alter_ego\">alter_ego</label>\n                            <input className=\"form-control\" type=\"text\" name=\"suite\" id=\"suite\" onChange={this.handleChange} value={form?form.address.suite:''}/>\n                            <br/>\n                            <label htmlFor=\"first_appearance\">first_appearance</label>\n                            <input className=\"form-control\" type=\"text\" name=\"city\" id=\"city\" onChange={this.handleChange} value={form?form.address.city:''}/>\n                            <br/>\n                            <label htmlFor=\"first_appearance\">first_appearance</label>\n                            <input className=\"form-control\" type=\"text\" name=\"zipcode\" id=\"zipcode\" onChange={this.handleChange} value={form?form.address.zipcode:''}/>\n                            <br/>\n                            <input \n                            id=\"fileSelector\"\n                            type=\"file\"\n                            name=\"file\"\n                            style={{ display: 'none' }}\n                            onChange={this.handleFileChange}/>\n\n                            <button className=\"btn btn-success\"\n                            onClick={() => this.handlePictureClick()}>Imagen</button>\n\n                            <input \n                            type=\"text\"\n                            name=\"image\"\n                            id=\"image\"\n                            value={form?form.image:''}\n                            onBlur={this.handleChange}/>\n\n                        </div>\n\n                    </ModalBody>\n                </Modal>\n\n                <Modal isOpen={this.state.modalEliminar}>\n                    <ModalBody>\n                        EstÃ¡ seguro de eliminar el superheroe {form && form.superhero}\n                    </ModalBody>\n                    <ModalFooter>\n                        <button className=\"btn btn-danger\"\n                        onClick={() => this.peticionesDelete()}>SÃ­</button>\n                        <button className=\"btn btn-secundary\"\n                        onClick={() => this.setState({modalEliminar: false})}>No</button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Usuarios;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport React, { Component } from 'react'\nimport Usuarios from '../components/Usuarios';\nimport '../styles/styles.css';\n\n\nexport default class AppRouter extends Component {\n\n\n    render() {\n        return (\n           <Router>\n               <Switch>\n                  <Route exact path=\"/Usuarios\" component={Usuarios}/>\n               </Switch>\n           </Router>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './routers/AppRouter';\n\nReactDOM.render(\n    <AppRouter />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}